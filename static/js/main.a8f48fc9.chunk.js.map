{"version":3,"sources":["img/flavorcolor.PNG","img/isara.PNG","img/CRM.PNG","img/codevillage.PNG","img/blog.PNG","img/portfolio.PNG","Work.js","About.js","plugins/firebase.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","paper","padding","spacing","backgroundColor","tileData","img","image1","title","skill","url","codeUrl","image4","image2","image5","image3","image6","Work","classes","Grid","container","map","tile","item","xs","Paper","className","href","target","src","style","width","height","marginTop","border","About","TableContainer","Table","margin","component","TableBody","left","right","data","TableRow","TableCell","minWidth","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","require","initializeApp","textFieldStyle","display","Contact","React","useState","sended","setSended","onSubmit","e","preventDefault","name","value","email","content","functions","httpsCallable","sendMail","console","log","textAlign","TextField","label","type","required","multiline","rows","variant","Button","color","bar","justifyContent","link","textDecoration","App","setValue","AppBar","position","Toolbar","Typography","Tabs","onChange","newValue","Tab","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a8f48fc9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/flavorcolor.e743329d.PNG\";","module.exports = __webpack_public_path__ + \"static/media/isara.e47f26ce.PNG\";","module.exports = __webpack_public_path__ + \"static/media/CRM.fc7e3863.PNG\";","module.exports = __webpack_public_path__ + \"static/media/codevillage.4ff20164.PNG\";","module.exports = __webpack_public_path__ + \"static/media/blog.421cb952.PNG\";","module.exports = __webpack_public_path__ + \"static/media/portfolio.726ac06e.PNG\";","import React from \"react\"\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport image1 from \"./img/flavorcolor.PNG\"\r\nimport image2 from \"./img/isara.PNG\"\r\nimport image3 from \"./img/CRM.PNG\"\r\nimport image4 from \"./img/codevillage.PNG\"\r\nimport image5 from \"./img/blog.PNG\"\r\nimport image6 from \"./img/portfolio.PNG\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      backgroundColor: \"#F5F5F5\"\r\n    },\r\n  }));\r\n\r\nconst tileData = [\r\n    {\r\n        // img: \"./img/flavorcolor.PNG\",\r\n        img: image1,\r\n        title: \"Flavor Color LP\",\r\n        skill: \"企画/デザイン/html, css, javascript/webpack/レスポンシブ対応\",\r\n        url: \"https://flavorcolor.net/\",\r\n        codeUrl: true,\r\n    },\r\n    {\r\n        img: image4,\r\n        title: \"模擬LPコーディング\",\r\n        skill: \"html, css, javascript/レスポンシブ対応\",\r\n        url: \"https://sawakiii.github.io/responsive-code-village-copied-page/\",\r\n        codeUrl: \"https://github.com/sawakiii/responsive-code-village-copied-page/\",\r\n    },\r\n    {\r\n        img: image2,\r\n        title: \"iSaraの模写コーディング\",\r\n        skill: \"html, css, javascript\",\r\n        url: \"https://sawakiii.github.io/iSaraCopiedPage/\",\r\n        codeUrl: true,\r\n    },\r\n    {\r\n        img: image5,\r\n        title: \"ブログレイアウトコーディング\",\r\n        skill: \"html, css\",\r\n        url: \"https://sawakiii.github.io/blog-practice/\",\r\n        codeUrl: \"https://github.com/sawakiii/blog-practice/\",\r\n    },\r\n    {\r\n        img: image3,\r\n        title: \"顧客管理アプリ(CRUD機能付き)\",\r\n        skill: \"MongoDB/Express/React/Node.js + Heroku\",\r\n        url: \"https://infinite-dusk-61757.herokuapp.com/\",\r\n        codeUrl: \"https://github.com/Sawakiii/CRM-app1\",\r\n    },\r\n    {\r\n        img: image6,\r\n        title: \"Reactで作るサーバレスなポートフォリオサイト(このページ)\",\r\n        skill: \"React + material-ui + firebase(メールフォームをcloud functions)\",\r\n        url: \"\",\r\n        codeUrl: \"https://github.com/sawakiii/myportfolio/\",\r\n    },\r\n]\r\n\r\nconst Work = () => {\r\n    const classes = useStyles()\r\n    return (\r\n        <>\r\n            <h1>Work</h1>\r\n            <p>画像をクリックすると実際のページを確認できます。</p>\r\n            <Grid container spacing={2}>\r\n            {\r\n                tileData.map((tile)=>\r\n                <Grid item xs={6}>\r\n                    <Paper className={classes.paper}>\r\n                    <h3>{tile.title}</h3>\r\n                    <p>{tile.skill}</p>\r\n                    <a href={tile.url} target=\"_blank\">\r\n                    {\r\n                        tile.codeUrl === true ? \r\n                        <img src={tile.img} style={{width: \"100%\", height: \"300px\", marginTop: \"30px\"}} border=\"\"></img>\r\n                        : \r\n                        <>\r\n                        <a href={tile.codeUrl} target=\"_blank\">ソースコードはこちら</a>\r\n                        <img src={tile.img} style={{width: \"100%\", height: \"300px\"}} border=\"\"></img>\r\n                        </>\r\n                    }\r\n                    </a>\r\n                    </Paper>\r\n                </Grid>\r\n                )\r\n            }\r\n\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Work\r\n","import React from \"react\"\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst About = () => {\r\n    const data = [\r\n        {\r\n            left: \"氏名\",\r\n            right: \"澤木愛輝\"\r\n        },\r\n        {\r\n            left: \"自己紹介\",\r\n            right: \"現在フロントエンドエンジニアのインターンを探しています。千葉大学国際教養学部、休学中。\"\r\n        },\r\n        {\r\n            left: \"経歴\",\r\n            right: `大学1-2年時に都内で役者活動を行う。\r\n            大学3年次からビジネスサロンに通った後、営業のインターン、\r\n            プログラミング講師を経て2020年にハーブティーブランドFlavor Colorを立ち上げる。`\r\n        },\r\n        {\r\n            left: \"スキルセット\",\r\n            right: \"html/css/javascript, React, node.js, MERN(Mongo/Express/React/Node.js)環境開発, python\"\r\n        }\r\n    ]\r\n    return (\r\n        <>\r\n        <h1>About</h1>\r\n        <TableContainer>\r\n            <Table style={{width: \"50%\", margin: \"0 auto\",backgroundColor: \"#F5F5F5\"}}  component={Paper}>\r\n                <TableBody>\r\n                    {\r\n                        data.map((data)=>\r\n                        <TableRow>\r\n                            <TableCell style={{minWidth: \"100px\"}}>{data.left}</TableCell>\r\n                            <TableCell>{data.right}</TableCell>\r\n                        </TableRow>)\r\n                    }\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: process.env.REACT_APP_apiKey,\r\n    authDomain: process.env.REACT_APP_authDomain,\r\n    databaseURL: process.env.REACT_APP_databaseURL,\r\n    projectId: process.env.REACT_APP_projectId,\r\n    storageBucket: process.env.REACT_APP_storageBucket,\r\n    messagingSenderId: process.env.REACT_APP_messagingSenderId,\r\n    appId: process.env.REACT_APP_appId,\r\n    measurementId: process.env.REACT_APP_measurementId\r\n}\r\n// const config = configParsed.parsed\r\n    \r\nexport default config\r\n\r\n// firebase.initializeApp(config);","import React from \"react\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Button from \"@material-ui/core/Button\"\r\n\r\nimport config from \"./plugins/firebase\"\r\nconst firebase = require('firebase');\r\nfirebase.initializeApp(config);\r\nrequire('firebase/functions');\r\n\r\nconst textFieldStyle = {\r\n    display: \"flex\",\r\n    width: \"300px\",\r\n    margin: \"20px auto\"\r\n}\r\n\r\n\r\nconst Contact = () => {\r\n    const [sended, setSended] = React.useState(false)\r\n    return (\r\n        <>\r\n        <h1>Contact</h1>\r\n        {\r\n            sended ? \r\n            <h2>問い合わせありがとうございます。2日以内に折り返し連絡させていただきます。</h2>\r\n            :\r\n        <form onSubmit={(e)=>{\r\n            e.preventDefault()\r\n            let data = {\r\n                name: e.target.name.value,\r\n                email: e.target.email.value,\r\n                content: e.target.content.value\r\n            }\r\n            let sendMail = firebase.functions().httpsCallable('sendMail');\r\n            sendMail(data)\r\n            setSended(true)\r\n            console.log(\"mail sended\")\r\n        }} style={{textAlign: \"center\"}}>\r\n            <TextField name=\"name\" label=\"お名前\" type=\"text\" required style={textFieldStyle}  />\r\n            <TextField name=\"email\" label=\"メールアドレス\" type=\"mail\" required style={textFieldStyle}   />\r\n            <TextField\r\n              required\r\n              name=\"content\"\r\n              label=\"お問い合わせ内容\"\r\n              multiline\r\n              rows=\"8\"\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              style={textFieldStyle} \r\n            />\r\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\" style={textFieldStyle} >\r\n              送信\r\n            </Button>\r\n        </form>\r\n        }\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport { Toolbar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Work from './Work';\nimport About from './About';\nimport Contact from './Contact';\n\nconst useStyles = makeStyles((theme) => ({\n  bar: {\n    justifyContent: \"space-between\"\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"inherit\"\n  }\n}));\n\nfunction App() {\n  const classes = useStyles()\n  const [value, setValue] = React.useState(0)\n  return (\n    <div>\n    <AppBar position=\"static\">\n      <Toolbar className={classes.bar}>\n        <Typography variant=\"h6\">\n          laelu's portfolio\n        </Typography>\n        <Tabs value={value} onChange={(e, newValue)=>{setValue(newValue)}}>\n          {/* <Link className={classes.link} to=\"/\"> */}\n          <Tab label=\"About\" />\n          {/* </Link>\n          <Link className={classes.link} to=\"/work\"> */}\n          <Tab label=\"Work\" />\n          {/* </Link>\n          <Link className={classes.link} to=\"contact\"> */}\n          <Tab label=\"Contact\" />\n          {/* </Link> */}\n        </Tabs>\n      </Toolbar>\n    </AppBar>\n\n    {\n      value < 2 \n      ?\n      value === 0 ? <About></About> : <Work></Work>\n      :\n      <Contact></Contact>\n    }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}